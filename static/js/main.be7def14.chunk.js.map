{"version":3,"sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["MainContainer","styled","div","Container","children","Stats","p","Statistics","props","good","neutral","bad","total","positiveFeedbacks","Btn","button","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","onClick","Title","h2","Section","title","Message","Notification","message","App","state","onIncrement","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","isShowStatistics","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAEaA,EAAgBC,IAAOC,IAAV,4H,OCAbC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvB,cAACJ,EAAD,UAAgBI,KCDLC,EAAQJ,IAAOK,EAAV,+FCELC,EAAa,SAACC,GACzB,IAAQC,EAAiDD,EAAjDC,KAAMC,EAA2CF,EAA3CE,QAASC,EAAkCH,EAAlCG,IAAKC,EAA6BJ,EAA7BI,MAAOC,EAAsBL,EAAtBK,kBAEnC,OACE,eAAC,WAAD,WACE,eAACR,EAAD,oBAAcI,KACd,eAACJ,EAAD,uBAAiBK,KACjB,eAACL,EAAD,mBAAaM,KACb,eAACN,EAAD,qBAAeO,KACf,eAACP,EAAD,iCAA2BQ,EAA3B,WCXOC,EAAMb,IAAOc,OAAV,wLCCHC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAOzC,OAAOC,OAAOC,KAAKH,GAASI,KANV,SAACC,GAAD,OAChB,cAACR,EAAD,CAAkBS,KAAK,SAASC,QAAS,kBAAMN,EAAgBI,IAA/D,SACGA,GADOA,OCHDG,EAAQxB,IAAOyB,GAAV,8FCELC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOxB,EAAe,EAAfA,SAC/B,OACE,eAAC,WAAD,WACE,cAACqB,EAAD,UAAQG,IACPxB,MCNMyB,EAAU5B,IAAOK,EAAV,gGCCPwB,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,cAACF,EAAD,UAAUE,KCI1CC,EAAb,4MACEC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEuB,YAAc,SAAAZ,GACZ,EAAKa,UAAS,SAAAC,GACZ,OAAO,eACJd,EAASc,EAAUd,GAAU,OAVtC,EAeEe,mBAAqB,WACnB,MAA+B,EAAKJ,MAEpC,OAFA,EAAQxB,KAAR,EAAcC,QAAd,EAAuBC,KAhB3B,EAqBE2B,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKP,MAAMxB,KAAc,EAAK4B,uBAtBrD,4CAyBE,WACE,MAA+BI,KAAKR,MAA5BxB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB+B,EAAmBD,KAAKJ,qBAAuB,EACrD,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAST,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAASwB,KAAKR,MACdf,gBAAiBuB,KAAKP,gBAGzBQ,GACC,cAAC,EAAD,CAASd,MAAM,aAAf,SACE,cAAC,EAAD,CACEnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,KAAKJ,qBACZxB,kBAAmB4B,KAAKH,uCAK5BI,GAAoB,cAAC,EAAD,CAAcX,QAAS,6BAhDrD,GAAyBY,a,MCFzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.be7def14.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  max-width: 600px;\n  margin-left: auto;\n  padding: 40px 15px 0 15px;\n  margin-right: auto;\n`;\n","import { MainContainer } from \"./Container.styled\";\n\nexport const Container = ({ children }) => (\n  <MainContainer>{children}</MainContainer>\n);\n","import styled from '@emotion/styled';\n\nexport const Stats = styled.p`\n  text-transform: capitalize;\n  font-size: 20px;\n  color: grey;\n`;\n","import { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Stats } from \"./Statistics.styled\";\n\nexport const Statistics = (props) => {\n  const { good, neutral, bad, total, positiveFeedbacks } = props;\n\n  return (\n    <Fragment>\n      <Stats>good: {good}</Stats>\n      <Stats>neutral: {neutral}</Stats>\n      <Stats>bad: {bad}</Stats>\n      <Stats>Total: {total}</Stats>\n      <Stats>Positive feedback: {positiveFeedbacks}%</Stats>\n    </Fragment>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedbacks: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Btn = styled.button`\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  width: 150px;\n  height: 35px;\n  margin-right: 15px;\n  text-transform: uppercase;\n  cursor: pointer;\n`;\n","import PropTypes from \"prop-types\";\nimport { Btn } from \"./FeedbackOptions.styled\";\n\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const createBtn = (option) => (\n    <Btn key={option} type=\"button\" onClick={() => onLeaveFeedback(option)}>\n      {option}\n    </Btn>\n  );\n\n  return Object.keys(options).map(createBtn);\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({}).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 34px;\n  font-style: italic;\n`;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Title } from \"./Section.styled\";\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Fragment>\n      <Title>{title}</Title>\n      {children}\n    </Fragment>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  color: tomato;\n  text-transform: uppercase;\n  font-size: 15px;\n`;\n","import PropTypes from \"prop-types\";\nimport { Message } from \"./Notification.styled\";\n\nexport const Notification = ({ message }) => <Message>{message}</Message>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Container } from '../Container/Container';\nimport { Statistics } from '../Statistics/Statistics';\nimport { FeedbackOptions } from '../FeedbackOptions/FeedbackOptions';\nimport { Section } from '../Section/Section';\nimport { Notification } from '../Notification/Notification';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onIncrement = option => {\n    this.setState(prevState => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const isShowStatistics = this.countTotalFeedback() > 0;\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onIncrement}\n          />\n        </Section>\n        {isShowStatistics && (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positiveFeedbacks={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        )}\n\n        {!isShowStatistics && <Notification message={'No feedback given'} />}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App/App.jsx';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}